version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: iscan_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-iscan_db}
      POSTGRES_USER: ${POSTGRES_USER:-iscan_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-iscan_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-iscan_user} -d ${POSTGRES_DB:-iscan_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - iscan_network

  redis:
    image: redis:7-alpine
    container_name: iscan_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - iscan_network

  backend:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: iscan_backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - DEBUG=false
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - iscan_network
    # Uses the default CMD from Dockerfile (./start.sh)

  celery:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: iscan_celery
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - iscan_network
    # Override the default command to run celery worker
    command: >
      sh -c "python wait-for-db.py && 
             python test_imports.py && 
             celery -A app.celery_app worker --loglevel=info --concurrency=2"

  celery-beat:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: iscan_celery_beat
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - iscan_network
    # Override the default command to run celery beat
    command: >
      sh -c "python wait-for-db.py && 
             celery -A app.celery_app beat --loglevel=info"

volumes:
  postgres_data:
  redis_data:

networks:
  iscan_network:
    name: iscan_shared_network
    driver: bridge
